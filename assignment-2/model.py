# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1273Beks_PaOAscMprrUNazYPh6n6kVaF
"""

import pickle as pkl
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import torch
import torch.nn as nn

#hyper-parameters
epochs = 10
output_class = 10
learning_rate = 0.001
input_size = 784
hidden_layer = 100

class DigitRecognizer(nn.Module):
  def __init__(self, input_size, hidden_layer, ouput_class):
    super(DigitRecognizer, self).__init__()
    self.input = nn.Linear(in_features = input_size, out_features = hidden_layer)
    self.relu_1 = nn.ReLU()
    self.hidden_1 = nn.Linear(in_features = hidden_layer, out_features = hidden_layer)
    self.relu_2 = nn.ReLU()
    self.hidden_2 = nn.Linear(in_features = hidden_layer, out_features = hidden_layer)
    self.relu_3 = nn.ReLU()
    self.output = nn.Linear(in_features = hidden_layer, out_features = output_class)
  
  def forward(self, x):
    model = self.input(x)
    model = self.relu_1(model)
    model = self.hidden_1(model)
    model = self.relu_2(model)
    model = self.hidden_2(model)
    model = self.relu_3(model)
    model = self.output(model)

    return model

model = DigitRecognizer(input_size, hidden_layer, output_class)
repr(model)